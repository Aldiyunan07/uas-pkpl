name: Kube Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: aldiyunan07/api-2106006:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [push_to_registry]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Deploy to Kubernetes
        env:
          SERVER_URL: http://154.26.139.201:8080
          NIM: ${{ secrets.NIM }}
          NAMA: ${{ secrets.NAMA }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          curl -X POST "$SERVER_URL/deploy?nim=$NIM&nama=$NAMA&docker_username=$DOCKER_USERNAME" \
            -H "Authorization: Bearer $DOCKER_TOKEN"

  clean:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Clean deployment by NIM
        env:
          SERVER_URL: http://154.26.139.201:8080
          NIM: ${{ secrets.NIM }}
        run: |
          curl -X DELETE "$SERVER_URL/clean/$NIM"

  get-index:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Get index
        env:
          SERVER_URL: http://154.26.139.201:8080
        run: |
          curl -X GET "$SERVER_URL/"
